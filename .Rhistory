mutate(lograin=log(rainnonull_mean)) %>%
#replacing NAs and infinity values with zero
mutate(lograin=replace(lograin, is.na(lograin),0),
lograin=replace(lograin, lograin=="-Inf",0))
latent_dem <- latent_dem %>%
#creating a latent democracy binary variable using mean as determinant among the descriptive statistics
mutate(latent_democracy=if_else(latent_dem$mean>=0,1,0)) %>%
#removing unnecesary columns
dplyr::select(-c(mean, sd, median, pct025, pct975))
View(rain_data_new)
View(rain_data_new)
latent_dem <- latent_dem %>%
#creating a latent democracy binary variable using mean as determinant among the descriptive statistics
mutate(latent_democracy=if_else(latent_dem$mean>=0,1,0)) #%>%
library(readr)#for reading datasets in R
library(tidyverse)#for data wrangling
library(haven)#for reading datasets in R
library(dplyr)#for data wrangling
library(AER)#for iv regressions
library(lubridate)#for dates
library(stargazer)#for a table of regression results
library(kableExtra)#for formatting dataframes
library(MatchIt)#for matching
library(cem)# for CEM matching
library(broom)#for converting regression models to a tidy data frame.
library(ggplot2)#for visualizing results
library(scales)# for confidence interval color specification
options(scipen = 999)
set.seed(123)#for consistent results
setwd("C:/Users/Gus/Documents/Hertie/Courses/Semester II/Stats II/Replication Paper/Data")
#naming datasets
rain_data <- haven::read_dta("RC_APSR_Data.dta")
latent_dem <- haven::read_dta("Latent_Democracy.dta")
quality_gov <- haven::read_dta("QoGData.dta")
rain_data_new <- rain_data %>%
#arranging cow and year in a descending order
arrange(cow,year) %>%
#rearranging and dropping unnecessary columns to ease creation of dissent and repress count columns
dplyr::select(adm0_adm1:rainannualpct, etype2:etype6,etype8, escalation1:escalation6, escalation8,escalation7,repBINARYone, repBINARYtwo, -c(escalation9, escalation10, repress2, repBINARYzero, etype7, etype9,etype10, etypeNEG9, escalation0)) %>%
#summation of variables to create represscount and dissentcount variables using placeholder assignee and indexing
mutate(dissentcount=rowSums(.[which(colnames(.)=="etype2"):which(colnames(.)=="escalation8")], na.rm=TRUE),
represscount=rowSums(.[which(colnames(.)=="escalation7"):which(colnames(.)=="repBINARYtwo")], na.rm = TRUE)) %>% #dropping unwanted variables from etype2 to repBINARYtwo after the aforementioned creation
dplyr::select(-c(etype2:repBINARYtwo)) %>%
#creating repressbinary variable
mutate(repressbinary=if_else(.$represscount>=1,1,0)) %>%
#creating dissent binary variable
mutate(dissentbinary=if_else(.$dissentcount>=1,1,0)) %>%
#creating lograin variable through a natural log
mutate(lograin=log(rainnonull_mean)) %>%
#replacing NAs and infinity values with zero
mutate(lograin=replace(lograin, is.na(lograin),0),
lograin=replace(lograin, lograin=="-Inf",0))
latent_dem <- latent_dem %>%
#creating a latent democracy binary variable using mean as determinant among the descriptive statistics
mutate(latent_democracy=if_else(latent_dem$mean>=0,1,0)) %>%
#removing unnecesary columns
dplyr::select(-c(mean, sd, median, pct025, pct975))
#Selecting wdi_gdp variable
quality_gov <- quality_gov %>%
dplyr::select(year, cow, cname, wdi_gdp)
#joining the three datasets
rain_data_joined <- rain_data_new %>%
#joining with latent democracy dataset using the left join to make sure I retain the same number of observations
left_join(latent_dem, by=c("cow", "year")) %>%
#creating democracy dissent binary variable
mutate(democracy_dissent=latent_democracy*dissentcount) %>%
#creating democracy rain variable
mutate(democracy_rain=latent_democracy*lograin) %>%
#creating democracy full rain variable
mutate(democracy_full_rain=latent_democracy*rainnonull_mean) %>%
#creating rain deviations variable
mutate(rain_deviations=rainnonull_mean-(annualrainsum/365)) %>%
#joining with quality gov dataset using left join for aforementioned reasons
left_join(quality_gov, by=c("cow", "year")) %>%
#assigning lograin as a binary variable
mutate(rain_treatment=ifelse(.$lograin<=0,0,1))
nas_omitted <- rain_data_joined %>%
#picking all necessary columns for matching
dplyr::select(adm0_name, cow, year, urban_mean, pop_sum, wdi_gdp,rain_treatment, rainnonull_mean, lograin, rain_deviations, represscount, dissentcount, rainannualpct, latent_democracy) %>%
#ommitting NAs since matching does not want them
na.omit()
#performing a CEM match using MatchIt package
cem_match <- matchit(rain_treatment ~ urban_mean + pop_sum + wdi_gdp, method = "cem", data = nas_omitted)
match_data <- match.data(cem_match)
#OLS Regression
summary(OLS_Regression <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined))
#Instrumental variable regressions
summary(Basic_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined))
summary(NonDemocracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0)))
summary(Democracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1)))
#Matched Regressions
summary(NonDemocracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights])))
summary(Democracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights])))
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", covariate.labels = c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
#Creating dataframes for the separate regressions
OLS_Reg <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined)
OLS_Reg <- tidy(OLS_Reg)
OLS_Reg <- OLS_Reg %>%
#adding a modelling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#Replacing NAs a relevant model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"OLS Regression"))
Basic_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined)
Basic_IV_Regression <- tidy(Basic_IV_Regression)
Basic_IV_Regression <- Basic_IV_Regression %>%
#adding a modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#REPLACING NAs with a relevant model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Basic IV Regression"))
#Non Democracies IV
NonDemocracies_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0))
NonDemocracies_IV_Regression <- tidy(NonDemocracies_IV_Regression)
NonDemocracies_IV_Regression <- NonDemocracies_IV_Regression %>%
#adding a modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with NonDemocracies IV Regression
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"NonDemocracies IV Regression"))
#Democracies IV Regression
Democracies_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1))
Democracies_IV_Regression <- tidy(Democracies_IV_Regression)
Democracies_IV_Regression <- Democracies_IV_Regression %>%
#adding modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with Democracies IV Regression
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Democracies IV Regression"))
#Matched Non Democracies
NonDemocracies_Matched_Regression <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights]))
NonDemocracies_Matched_Regression <- tidy(NonDemocracies_Matched_Regression)
NonDemocracies_Matched_Regression <- NonDemocracies_Matched_Regression %>%
#adding the modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with respective model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"NonDemocracies Matched Regressions"))
#Matched Democracies
Democracies_Matched_Regression <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights]))
Democracies_Matched_Regression <- tidy(Democracies_Matched_Regression)
Democracies_Matched_Regression <- Democracies_Matched_Regression %>%
#adding modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with respective model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Democracies Matched Regressions"))
#Binding the six data frames together
Combined_Models <- rbind(OLS_Reg,Basic_IV_Regression, NonDemocracies_IV_Regression, Democracies_IV_Regression, NonDemocracies_Matched_Regression, Democracies_Matched_Regression) %>%
#omitting unnecessary columns
dplyr::select(-c(statistic,p.value))
ggplot(Combined_Models,
aes(x=term,
y=estimate,
color=modeling_strategy)) +
geom_hline(yintercept = 0, color="grey", lty=2) +
geom_point()+
geom_linerange(aes(ymin=estimate - 1.96*std.error, ymax=estimate+1.96*std.error), position = position_dodge(width = 1/2))+
geom_linerange(aes(ymin=estimate-1.65*std.error, ymax=estimate+1.65*std.error), position = position_dodge(width = 1/2),
size=1.2)+
labs(x="Independent Variables",
y="Repression (Estimates) on Confidence Intervals")+
theme_light()
#running a linear model of the interaction between popolation and dissent
#I omitt NAs in my dataset because with NAs ggplot will not be able to plot
interactions <- lm(represscount~pop_sum*dissentcount, data = nas_omitted)
range(nas_omitted$pop_sum)#to aid in setting population to millions
summary(nas_omitted$dissentcount)#to aid in determining a bandwidth for holding it constant
#holding dissent constant while allowing population to vary in millions
pre_pred <- data.frame(expand.grid(pop_sum=seq(min(nas_omitted$pop_sum), max(nas_omitted$pop_sum), 1000000),
dissentcount=c(min(nas_omitted$dissentcount),
max(nas_omitted$dissentcount))))
#predicting fitted values
predicted <- predict(interactions,pre_pred, se = T)
#combining the two data frames to have a data frame with fitted values
df_predicted <- cbind(pre_pred, predicted)
#glancing at the new data frame
head(df_predicted)
plotcols <-c("cornflowerblue","goldenrod")
#plotting the interactions
ggplot(df_predicted,
aes(x=pop_sum,
y=fit,
color=factor(dissentcount)))+
geom_line(aes())+
#specifying the confidence intervals
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit, fill=factor(dissentcount)),
alpha=0.2,
color=NA)+
#specifying lables for dissent at points it is held constant
scale_fill_manual(labels=c("Minimum Dissent",
"Maximum Dissent"),
name="",
values = plotcols)+
#Naming my x and y axis
labs(x="Population (Millions)",
y="Repression (fitted values) with 95% CI")+
theme_light()+
#positioning my legend
theme(legend.position = "top",
panel.grid.minor = element_blank())+
#deploying the scales package
scale_x_continuous(labels = label_number(scale=1/1e6))
#linear model
summary(all_cov <- lm(represscount~dissentcount+pop_sum+dissentcount*pop_sum, data = rain_data_joined))
0.23007576852822+0.00000000559400
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", covariate.labels = c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
library(readr)#for reading datasets in R
library(tidyverse)#for data wrangling
library(haven)#for reading datasets in R
library(dplyr)#for data wrangling
library(AER)#for iv regressions
library(lubridate)#for dates
library(stargazer)#for a table of regression results
library(kableExtra)#for formatting dataframes
library(MatchIt)#for matching
library(cem)# for CEM matching
library(broom)#for converting regression models to a tidy data frame.
library(ggplot2)#for visualizing results
library(scales)# for confidence interval color specification
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables",covariate.labels =c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
library(readr)#for reading datasets in R
library(tidyverse)#for data wrangling
library(haven)#for reading datasets in R
library(dplyr)#for data wrangling
library(AER)#for iv regressions
library(lubridate)#for dates
library(stargazer)#for a table of regression results
library(kableExtra)#for formatting dataframes
library(MatchIt)#for matching
library(cem)# for CEM matching
library(broom)#for converting regression models to a tidy data frame.
library(ggplot2)#for visualizing results
library(scales)# for confidence interval color specification
options(scipen = 999)
set.seed(123)#for consistent results
setwd("C:/Users/Gus/Documents/Hertie/Courses/Semester II/Stats II/Replication Paper/Data")
library(readr)#for reading datasets in R
library(tidyverse)#for data wrangling
library(haven)#for reading datasets in R
library(dplyr)#for data wrangling
library(AER)#for iv regressions
library(lubridate)#for dates
library(stargazer)#for a table of regression results
library(kableExtra)#for formatting dataframes
library(MatchIt)#for matching
library(cem)# for CEM matching
library(broom)#for converting regression models to a tidy data frame.
library(ggplot2)#for visualizing results
library(scales)# for confidence interval color specification
options(scipen = 999)
set.seed(123)#for consistent results
setwd("C:/Users/Gus/Documents/Hertie/Courses/Semester II/Stats II/Replication Paper/Data")
#naming datasets
rain_data <- haven::read_dta("RC_APSR_Data.dta")
latent_dem <- haven::read_dta("Latent_Democracy.dta")
quality_gov <- haven::read_dta("QoGData.dta")
rain_data_new <- rain_data %>%
#arranging cow and year in a descending order
arrange(cow,year) %>%
#rearranging and dropping unnecessary columns to ease creation of dissent and repress count columns
dplyr::select(adm0_adm1:rainannualpct, etype2:etype6,etype8, escalation1:escalation6, escalation8,escalation7,repBINARYone, repBINARYtwo, -c(escalation9, escalation10, repress2, repBINARYzero, etype7, etype9,etype10, etypeNEG9, escalation0)) %>%
#summation of variables to create represscount and dissentcount variables using placeholder assignee and indexing
mutate(dissentcount=rowSums(.[which(colnames(.)=="etype2"):which(colnames(.)=="escalation8")], na.rm=TRUE),
represscount=rowSums(.[which(colnames(.)=="escalation7"):which(colnames(.)=="repBINARYtwo")], na.rm = TRUE)) %>% #dropping unwanted variables from etype2 to repBINARYtwo after the aforementioned creation
dplyr::select(-c(etype2:repBINARYtwo)) %>%
#creating repressbinary variable
mutate(repressbinary=if_else(.$represscount>=1,1,0)) %>%
#creating dissent binary variable
mutate(dissentbinary=if_else(.$dissentcount>=1,1,0)) %>%
#creating lograin variable through a natural log
mutate(lograin=log(rainnonull_mean)) %>%
#replacing NAs and infinity values with zero
mutate(lograin=replace(lograin, is.na(lograin),0),
lograin=replace(lograin, lograin=="-Inf",0))
latent_dem <- latent_dem %>%
#creating a latent democracy binary variable using mean as determinant among the descriptive statistics
mutate(latent_democracy=if_else(latent_dem$mean>=0,1,0)) %>%
#removing unnecesary columns
dplyr::select(-c(mean, sd, median, pct025, pct975))
#Selecting wdi_gdp variable
quality_gov <- quality_gov %>%
dplyr::select(year, cow, cname, wdi_gdp)
#joining the three datasets
rain_data_joined <- rain_data_new %>%
#joining with latent democracy dataset using the left join to make sure I retain the same number of observations
left_join(latent_dem, by=c("cow", "year")) %>%
#creating democracy dissent binary variable
mutate(democracy_dissent=latent_democracy*dissentcount) %>%
#creating democracy rain variable
mutate(democracy_rain=latent_democracy*lograin) %>%
#creating democracy full rain variable
mutate(democracy_full_rain=latent_democracy*rainnonull_mean) %>%
#creating rain deviations variable
mutate(rain_deviations=rainnonull_mean-(annualrainsum/365)) %>%
#joining with quality gov dataset using left join for aforementioned reasons
left_join(quality_gov, by=c("cow", "year")) %>%
#assigning lograin as a binary variable
mutate(rain_treatment=ifelse(.$lograin<=0,0,1))
nas_omitted <- rain_data_joined %>%
#picking all necessary columns for matching
dplyr::select(adm0_name, cow, year, urban_mean, pop_sum, wdi_gdp,rain_treatment, rainnonull_mean, lograin, rain_deviations, represscount, dissentcount, rainannualpct, latent_democracy) %>%
#ommitting NAs since matching does not want them
na.omit()
#performing a CEM match using MatchIt package
cem_match <- matchit(rain_treatment ~ urban_mean + pop_sum + wdi_gdp, method = "cem", data = nas_omitted)
match_data <- match.data(cem_match)
#OLS Regression
summary(OLS_Regression <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined))
#Instrumental variable regressions
summary(Basic_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined))
summary(NonDemocracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0)))
summary(Democracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1)))
#Matched Regressions
summary(NonDemocracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights])))
summary(Democracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights])))
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables",covariate.labels =c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
#Creating dataframes for the separate regressions
OLS_Reg <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined)
OLS_Reg <- tidy(OLS_Reg)
OLS_Reg <- OLS_Reg %>%
#adding a modelling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#Replacing NAs a relevant model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"OLS Regression"))
Basic_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined)
Basic_IV_Regression <- tidy(Basic_IV_Regression)
Basic_IV_Regression <- Basic_IV_Regression %>%
#adding a modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#REPLACING NAs with a relevant model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Basic IV Regression"))
#Non Democracies IV
NonDemocracies_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0))
NonDemocracies_IV_Regression <- tidy(NonDemocracies_IV_Regression)
NonDemocracies_IV_Regression <- NonDemocracies_IV_Regression %>%
#adding a modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with NonDemocracies IV Regression
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"NonDemocracies IV Regression"))
#Democracies IV Regression
Democracies_IV_Regression <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1))
Democracies_IV_Regression <- tidy(Democracies_IV_Regression)
Democracies_IV_Regression <- Democracies_IV_Regression %>%
#adding modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with Democracies IV Regression
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Democracies IV Regression"))
#Matched Non Democracies
NonDemocracies_Matched_Regression <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights]))
NonDemocracies_Matched_Regression <- tidy(NonDemocracies_Matched_Regression)
NonDemocracies_Matched_Regression <- NonDemocracies_Matched_Regression %>%
#adding the modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with respective model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"NonDemocracies Matched Regressions"))
#Matched Democracies
Democracies_Matched_Regression <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights]))
Democracies_Matched_Regression <- tidy(Democracies_Matched_Regression)
Democracies_Matched_Regression <- Democracies_Matched_Regression %>%
#adding modeling strategy column for a descriptive plot
mutate(modeling_strategy=NA) %>%
#replacing NAs with respective model
mutate(modeling_strategy=replace(modeling_strategy, is.na(modeling_strategy),"Democracies Matched Regressions"))
#Binding the six data frames together
Combined_Models <- rbind(OLS_Reg,Basic_IV_Regression, NonDemocracies_IV_Regression, Democracies_IV_Regression, NonDemocracies_Matched_Regression, Democracies_Matched_Regression) %>%
#omitting unnecessary columns
dplyr::select(-c(statistic,p.value))
ggplot(Combined_Models,
aes(x=term,
y=estimate,
color=modeling_strategy)) +
geom_hline(yintercept = 0, color="grey", lty=2) +
geom_point()+
geom_linerange(aes(ymin=estimate - 1.96*std.error, ymax=estimate+1.96*std.error), position = position_dodge(width = 1/2))+
geom_linerange(aes(ymin=estimate-1.65*std.error, ymax=estimate+1.65*std.error), position = position_dodge(width = 1/2),
size=1.2)+
labs(x="Independent Variables",
y="Repression (Estimates) on Confidence Intervals")+
theme_light()
#running a linear model of the interaction between popolation and dissent
#I omitt NAs in my dataset because with NAs ggplot will not be able to plot
interactions <- lm(represscount~pop_sum*dissentcount, data = nas_omitted)
range(nas_omitted$pop_sum)#to aid in setting population to millions
summary(nas_omitted$dissentcount)#to aid in determining a bandwidth for holding it constant
#holding dissent constant while allowing population to vary in millions
pre_pred <- data.frame(expand.grid(pop_sum=seq(min(nas_omitted$pop_sum), max(nas_omitted$pop_sum), 1000000),
dissentcount=c(min(nas_omitted$dissentcount),
max(nas_omitted$dissentcount))))
#predicting fitted values
predicted <- predict(interactions,pre_pred, se = T)
#combining the two data frames to have a data frame with fitted values
df_predicted <- cbind(pre_pred, predicted)
#glancing at the new data frame
head(df_predicted)
#specifying plotting colors for the confidence intervals
plotcols <-c("cornflowerblue","goldenrod")
#plotting the interactions
ggplot(df_predicted,
aes(x=pop_sum,
y=fit,
color=factor(dissentcount)))+
geom_line(aes())+
#specifying the confidence intervals
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit, fill=factor(dissentcount)),
alpha=0.2,
color=NA)+
#specifying lables for dissent at points it is held constant
scale_fill_manual(labels=c("Minimum Dissent",
"Maximum Dissent"),
name="",
values = plotcols)+
#Naming my x and y axis
labs(x="Population (Millions)",
y="Repression (fitted values) with 95% CI")+
theme_light()+
#positioning my legend
theme(legend.position = "top",
panel.grid.minor = element_blank())+
#deploying the scales package
scale_x_continuous(labels = label_number(scale=1/1e6))
#linear model
summary(all_cov <- lm(represscount~dissentcount+pop_sum+dissentcount*pop_sum, data = rain_data_joined))
0.23007576852822+0.00000000559400
#OLS Regression
summary(OLS_Regression <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined))
#Instrumental variable regressions
summary(Basic_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined))
summary(NonDemocracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0)))
summary(Democracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1)))
#Matched Regressions
summary(NonDemocracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights])))
summary(Democracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights])))
#OLS Regression
OLS_Regression <- lm(represscount~dissentcount+urban_mean, data = rain_data_joined)
#Instrumental variable regressions
Basic_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct +urban_mean, data = rain_data_joined)
NonDemocracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==0))
Democracies_IV_Reg <- ivreg(represscount ~ dissentcount + urban_mean | lograin + rainannualpct + urban_mean, data = rain_data_joined %>% dplyr::filter(latent_democracy==1))
#Matched Regressions
NonDemocracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==0[weights]))
Democracies_Matched_Reg <- ivreg(represscount ~ dissentcount + urban_mean | urban_mean + lograin + rainannualpct, data = match_data %>% dplyr::filter(latent_democracy==1[weights]))
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables",covariate.labels =c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables",covariate.labels =c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
#linear model
all_cov <- lm(represscount~dissentcount+pop_sum+dissentcount*pop_sum, data = rain_data_joined)
stargazer(all_cov, title = "Interaction Effects of Population on Repression", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables",covariate.labels =c("Dissent","Population","Dissent:Population","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
#linear model
summary(all_cov <- lm(represscount~dissentcount+pop_sum+dissentcount*pop_sum, data = rain_data_joined))
stargazer(OLS_Regression, Basic_IV_Reg, NonDemocracies_IV_Reg,Democracies_IV_Reg,NonDemocracies_Matched_Reg, Democracies_Matched_Reg, title = "The Effect of Mobilized Dissent on State Repression in African Province-Days", dep.var.labels = "Repression", dep.var.caption = "Dependent Variables", column.labels = c("OLS", "Basic IV Regression","Non-Democracy IV Regression","Democracy IV Regression","Non Democracy Matched Regression","Democracy Matched Regression"), covariate.labels =c("Dissent","Urbanization","Constant"), align = TRUE, omit.stat = c("LL","ser","f"), no.space = TRUE, type = "html")
reticulate::repl_python()
type(a)
type(a)
print("I started with $" + str(savings) + " and now have $" + str(result) + ". Awesome!")
savings=100
result=100 * 1.10 ** 7
print("I started with $" + str(savings) + " and now have $" + str(result) + ". Awesome!")
pi_string = "3.1415926"
pi_float=float(pi_string)
pi_float
install.packages("Git")
install.packages("usethis")
library(usethis)
use_git_config(user.name = "Gus Malija", user.email ="augustinemalija@gmail.com")
config -- global core.editor "emacs"
config -- global core.editor
config -- global core.editor "windows"
git clone https://github.com/GusMalija/Trial.git
https://github.com/GusMalija/Trial.git
clone https://github.com/GusMalija/Trial.git
reticulate::repl_python()
import matplotlib.pyplot
plt.plot(x,y)
import matplotlib
plt.show()
#reading dataset
getwd()
unlabeled <- read.csv("unlabelled_tweets.csv")
library(tidyverse)
library(dplyr)
#reading dataset
unlabeled <- read.csv("unlabelled_tweets.csv")
#selecting a random sample of 50000 tweets
random_unlabeled <- sample_n(unlabeled, 50000)
#writing to CSV
write.csv(random_unlabeled, "random_unlabeled.csv")
library(DBI)
db = dbConnect(RSQLite::SQLite(), dbname = "movies/data_movies.db")
install.packages(RSQLite)
library(DBI)
library(RSQLite)
#library(DBI)
install.packages(RSQLite)
getwd()
setwd("C:/Users/Gus/Documents/GitHub/Master-Thesis-Project-Augustine-Malija-Python")
getwd()
monthly_counts <- read.csv("monthly_counts.csv") %>%
#replacing with real names of classes
mutate(classes = case_when(
classes == "1" ~ "In Favor",
classes == "2" ~ "Against",
classes == "3" ~ "Neutral"))
#loading libraries
library(dplyr)
library(ggplot2)
monthly_counts <- read.csv("monthly_counts.csv") %>%
#replacing with real names of classes
mutate(classes = case_when(
classes == "1" ~ "In Favor",
classes == "2" ~ "Against",
classes == "3" ~ "Neutral"))
monthly_counts <- read.csv("monthly_counts.csv") %>%
#replacing with real names of classes
mutate(classes = case_when(
classes == "1" ~ "In Favor",
classes == "2" ~ "Against",
classes == "3" ~ "Neutral"))
write.csv(monthly_counts, "C:/Users/Gus/Documents/GitHub/Master-Thesis-Project-Augustine-Malija-Python/monthly_counts.csv", row.names = F)
